<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.opencryptotrade</groupId>
    <artifactId>exchange</artifactId>
    <version>1.0</version>

    <packaging>pom</packaging>

    <name>Open Crypto Trade Parent</name>
    <description>The open source crypto trade system</description>

    <modules>
        <module>commons</module>
        <module>account-service</module>
        <module>smtp-service</module>
        <module>template-builder-service</module>
        <module>cryptocurrency-service</module>
        <module>auth-commons-reactive</module>
        <module>auth-service</module>
        <module>commons-reactive</module>
        <module>client-service</module>
        <module>communications</module>
    </modules>

    <properties>
        <java.version>19</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <javers-core.version>6.8.0</javers-core.version>
        <jackson-databind.version>2.14.0</jackson-databind.version>
        <spring-boot.version>2.7.5</spring-boot.version>
        <spring-cloud.version>2021.0.5</spring-cloud.version>
        <spring-data-r2dbc.version>1.5.5</spring-data-r2dbc.version>
        <spring-data-mongodb.version>3.4.5</spring-data-mongodb.version>
        <mongodb-driver-reactivestreams.version>4.7.2</mongodb-driver-reactivestreams.version>
        <spring-vault.version>2.3.2</spring-vault.version>
        <axonframework.version>4.6.2</axonframework.version>
        <axon-reactor.version>4.6.0</axon-reactor.version>
        <camel-spring-boot-starter.version>3.19.0</camel-spring-boot-starter.version>
        <camel-quartz.version>3.19.0</camel-quartz.version>
        <camel-core.version>3.19.0</camel-core.version>
        <camel-kubernetes.version>3.19.0</camel-kubernetes.version>
        <io.jsonwebtoken.version>0.11.5</io.jsonwebtoken.version>
        <projectreactor.version>3.4.25</projectreactor.version>
        <projectreactor-netty-http.version>1.1.0</projectreactor-netty-http.version>
        <postgresql-driver-version>42.5.1</postgresql-driver-version>
        <r2dbc-postgresql-version>0.8.13.RELEASE</r2dbc-postgresql-version>
        <spring-boot-maven-plugin.version>${spring-boot.version}</spring-boot-maven-plugin.version>
        <commons-io.version>2.11.0</commons-io.version>
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
        <jib-maven-plugin.version>3.3.0</jib-maven-plugin.version>
        <image>registry.asofe.org/root/open-crypto-trade/${project.artifactId}:${project.version}</image>
        <docker-skip>true</docker-skip>
        <docker-goal>build</docker-goal>
        <apache.commons.version>3.12.0</apache.commons.version>
        <apache-commons-collections4.version>4.4</apache-commons-collections4.version>
        <bouncycastle.version>1.70</bouncycastle.version>
        <mockito-core.vesion>4.8.0</mockito-core.vesion>
        <mockito-junit-jupiter.version>4.8.0</mockito-junit-jupiter.version>
        <junit-jupiter.version>5.9.1</junit-jupiter.version>
        <junit-jupiter-api.version>5.9.1</junit-jupiter-api.version>
        <junit-jupiter-engine.version>5.9.1</junit-jupiter-engine.version>
        <junit-jupiter-params.version>5.9.1</junit-jupiter-params.version>
        <apache-commons-dbcp2.version>2.9.0</apache-commons-dbcp2.version>
        <modelmapper.version>3.1.0</modelmapper.version>
    </properties>

    <!--
    This section provides centralized configuration for dependency libraries (Maven best practices).
    These entries DO NOT pull the actual libraries into the project but provide the declarations of versions, scopes,
    exclusions, etc. Each module within the parent project must include the libraries that are only relevant to the
    module while only specifying the groupId and artifactId for each included dependency.  That ensures consistency
    in dependency versions and scope definitions across multiple modules.
    -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-r2dbc</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-r2dbc</artifactId>
                <version>${spring-data-r2dbc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-mongodb</artifactId>
                <version>${spring-data-mongodb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongodb-driver-reactivestreams</artifactId>
                <version>${mongodb-driver-reactivestreams.version}</version>
            </dependency>
            <dependency>
                <groupId>io.r2dbc</groupId>
                <artifactId>r2dbc-postgresql</artifactId>
                <version>${r2dbc-postgresql-version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql-driver-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-kubernetes</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.vault</groupId>
                <artifactId>spring-vault-core</artifactId>
                <version>${spring-vault.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-core</artifactId>
                <version>${projectreactor.version}</version>
            </dependency>
            <dependency>
                <groupId>io.projectreactor.netty</groupId>
                <artifactId>reactor-netty-http</artifactId>
                <version>${projectreactor-netty-http.version}</version>
            </dependency>
            <dependency>
                <groupId>org.axonframework</groupId>
                <artifactId>axon-spring-boot-starter</artifactId>
                <version>${axonframework.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.axonframework</groupId>
                        <artifactId>axon-server-connector</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.axonframework.extensions.reactor</groupId>
                <artifactId>axon-reactor-spring-boot-starter</artifactId>
                <version>${axon-reactor.version}</version>
            </dependency>
            <dependency>
                <groupId>org.axonframework</groupId>
                <artifactId>axon-messaging</artifactId>
                <version>${axonframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.axonframework</groupId>
                <artifactId>axon-configuration</artifactId>
                <version>${axonframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.axonframework</groupId>
                <artifactId>axon-spring</artifactId>
                <version>${axonframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.axonframework</groupId>
                <artifactId>axon-spring-boot-autoconfigure</artifactId>
                <version>${axonframework.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-databind.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <type>maven-plugin</type>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${apache-commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache.commons.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-dbcp2</artifactId>
                <version>${apache-commons-dbcp2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-quartz</artifactId>
                <version>${camel-quartz.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-core</artifactId>
                <version>${camel-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel.springboot</groupId>
                <artifactId>camel-spring-boot-starter</artifactId>
                <version>${camel-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel.springboot</groupId>
                <artifactId>camel-kubernetes-starter</artifactId>
                <version>${camel-kubernetes.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-kubernetes</artifactId>
                <version>${camel-kubernetes.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modelmapper</groupId>
                <artifactId>modelmapper</artifactId>
                <version>${modelmapper.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${io.jsonwebtoken.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${io.jsonwebtoken.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${io.jsonwebtoken.version}</version>
            </dependency>
            <dependency>
                <groupId>org.javers</groupId>
                <artifactId>javers-core</artifactId>
                <version>${javers-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib-maven-plugin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter-api.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit-jupiter-params.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter-engine.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito-core.vesion}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito-junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <release>${java.version}</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- jib-maven-plugin is used to build and publish Docker images -->
                <!-- see individual pom.xml within this project for configuration -->
                <!-- to run local build add `docker-local` profile to default maven build -->
                <!-- to build and publish images, add `docker` profile to default maven build -->
                <!-- Ex.: `mvn clean install -P docker` -->
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>${docker-goal}</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <container>
                            <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                        </container>
<!--                        <allowInsecureRegistries>true</allowInsecureRegistries>-->
                        <from>
                            <image>openjdk:17-jdk-slim</image>
                        </from>
                        <to>
                            <image>${image}</image>
                            <auth>
                                <username>root</username>
                                <password>eoLj3PgTBf2ow3wc</password>
                            </auth>
                        </to>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <profile>
            <id>docker-local</id>
            <properties>
                <docker-goal>dockerBuild</docker-goal>
                <docker-image>${image}</docker-image>
            </properties>
        </profile>
        <profile>
            <id>ci</id>
            <activation>
                <property>
                    <name>env.GIT_BRANCH</name>
                </property>
            </activation>
            <properties>
                <docker-image-tag>${env.GIT_BRANCH}</docker-image-tag>
            </properties>
        </profile>
    </profiles>

</project>