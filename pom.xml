<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.opencryptotrade</groupId>
    <artifactId>exchange</artifactId>
    <version>1.0</version>

    <packaging>pom</packaging>

    <name>Open Crypto Trade Parent</name>
    <description>The open source crypto trade system</description>

    <modules>
        <module>commons</module>
        <module>auth-service</module>
        <module>account-service</module>
        <module>smtp-service</module>
        <module>template-builder-service</module>
    </modules>

    <properties>
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven.compiler.source>15</maven.compiler.source>
        <maven.compiler.target>15</maven.compiler.target>
        <javers-core.version>6.2.4</javers-core.version>
        <spring-boot.version>2.5.5</spring-boot.version>
        <spring-cloud.version>2020.0.4</spring-cloud.version>
        <spring-cloud-starter-oauth2.version>2.2.5.RELEASE</spring-cloud-starter-oauth2.version>
        <spring-boot-maven-plugin.version>${spring-boot.version}</spring-boot-maven-plugin.version>
        <commons-io.version>2.11.0</commons-io.version>
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
        <jib-maven-plugin.version>3.1.4</jib-maven-plugin.version>
        <image>registry.asofe.org/root/open-crypto-trade/${project.artifactId}:${project.version}</image>
        <docker-skip>true</docker-skip>
        <docker-goal>build</docker-goal>
        <docker-main-class></docker-main-class>
        <mockito-core.vesion>3.12.4</mockito-core.vesion>
        <mockito-junit-jupiter.version>3.12.4</mockito-junit-jupiter.version>
        <junit-jupiter.version>5.7.0</junit-jupiter.version>
        <junit-jupiter-api.version>5.7.2</junit-jupiter-api.version>
        <junit-jupiter-engine.version>5.7.2</junit-jupiter-engine.version>
        <junit-jupiter-params.version>5.7.2</junit-jupiter-params.version>
        <apache-commons-dbcp2.version>2.9.0</apache-commons-dbcp2.version>
        <modelmapper.version>2.4.4</modelmapper.version>
    </properties>

    <!--
    This section provides centralized configuration for dependency libraries (Maven best practices).
    These entries DO NOT pull the actual libraries into the project but provide the declarations of versions, scopes,
    exclusions, etc. Each module within the parent project must include the libraries that are only relevant to the
    module while only specifying the groupId and artifactId for each included dependency.  That ensures consistency
    in dependency versions and scope definitions across multiple modules.
    -->
    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot -->

            <!-- When creating Spring Boot applications, one of the options is to inherit the project from the Spring Boot parent -->
            <!-- since we are NOT doing that in favor of our own Parent, we must import Spring Boot's dependency management -->
            <!-- NOTE: Spring Boot provides many commonly used dependency definitions, so we only need to add a few -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-oauth2</artifactId>
                <version>${spring-cloud-starter-oauth2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <type>maven-plugin</type>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-dbcp2</artifactId>
                <version>${apache-commons-dbcp2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modelmapper</groupId>
                <artifactId>modelmapper</artifactId>
                <version>${modelmapper.version}</version>
            </dependency>
            <dependency>
                <groupId>org.javers</groupId>
                <artifactId>javers-core</artifactId>
                <version>${javers-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib-maven-plugin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter-api.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit-jupiter-params.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter-engine.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito-core.vesion}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito-junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <release>${java.version}</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- jib-maven-plugin is used to build and publish Docker images -->
                <!-- see individual pom.xml within this project for configuration -->
                <!-- to run local build add `docker-local` profile to default maven build -->
                <!-- to build and publish images, add `docker` profile to default maven build -->
                <!-- Ex.: `mvn clean install -P docker` -->
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>${docker-goal}</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <container>
                            <mainClass>${docker-main-class}</mainClass>
                            <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                        </container>
                        <from>
                            <image>gcr.io/distroless/java:11</image>
                        </from>
                        <to>
                            <image>${image}</image>
                            <auth>
                                <username>root</username>
                                <password>eoLj3PgTBf2ow3wc</password>
                            </auth>
                        </to>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <profile>
            <id>docker-local</id>
            <properties>
                <docker-goal>dockerBuild</docker-goal>
                <docker-image>${image}</docker-image>
            </properties>
        </profile>
        <profile>
            <id>ci</id>
            <activation>
                <property>
                    <name>env.GIT_BRANCH</name>
                </property>
            </activation>
            <properties>
                <docker-image-tag>${env.GIT_BRANCH}</docker-image-tag>
            </properties>
        </profile>
    </profiles>

</project>